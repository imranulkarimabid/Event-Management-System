
--================
--USER_TYPE TABLE 
--================


CREATE TABLE USER_TYPE
( 
USER_TYPE_ID              NUMBER, 
USER_TYPE_NAME            VARCHAR2(100) CONSTRAINT USER_TYPE_USER_TYPE_NAME_NN NOT NULL, 
USER_TYPE_DESCRIPTION     VARCHAR2(250), 
ACTION_USER               VARCHAR2(100) DEFAULT user, 
ACTION_DATE_TIME          DATE DEFAULT sysdate
) ; 


ALTER TABLE USER_TYPE
add   constraint USER_TYPE_USER_TYPE_ID_PK primary key (USER_TYPE_ID) ;




--===================
--USER_STATUS TABLE 
--===================


CREATE TABLE USER_STATUS
(
USER_STATUS_ID              NUMBER, 
USER_STATUS_NAME            VARCHAR2(100) CONSTRAINT USER_STATUS_USER_STATUS_NAME_NN NOT NULL,
USER_STATUS_DESCRIPTION     VARCHAR2(250), 
ACTION_USER                 VARCHAR2(100 ) DEFAULT user, 
ACTION_DATE_TIME            DATE DEFAULT sysdate
) ;


alter table USER_STATUS 
add   constraint USER_STATUS_USER_STATUS_ID_pk primary key (USER_STATUS_ID) ; 

desc USER_STATUS ;


--===================
--BRANCH TABLE 
--===================
  

CREATE TABLE BRANCH
(	
BRANCH_ID                 NUMBER, 
BRANCH_NAME               VARCHAR2(100) CONSTRAINT BRANCH_BRANCH_NAME_NN NOT NULL, 
CELL_NUMBER               VARCHAR2(100) CONSTRAINT BRANCH_CELL_NUMBER_UK UNIQUE, 
BRANCH_ADDRESS            VARCHAR2(250), 
EMAIL                     VARCHAR2(100) CONSTRAINT BRANCH_EMAIL_UK UNIQUE, 
ACTION_USER               VARCHAR2(100) DEFAULT user, 
ACTION_DATE_TIME          DATE DEFAULT sysdate
) ; 

	 
alter table BRANCH 
add constraint BRANCH_BRANCH_ID_pk primary key (BRANCH_ID) ; 


--===================
--DEPARTMENT TABLE 
--===================


CREATE TABLE DEPARTMENT
(
DEPARTMENT_ID            NUMBER, 
DEPARTMENT_NAME          VARCHAR2(100) CONSTRAINT  DEPARTMENT_DEPARTMENT_NAME_NN  NOT NULL
                                       CONSTRAINT  DEPARTMENT_DEPARTMENT_NAME_UK  UNIQUE , 
DEPARTMENT_LOCATION      VARCHAR2(100), 
DEPARTMENT_COUNTRY       VARCHAR2(100), 
ACTION_USER              VARCHAR2(100) DEFAULT user, 
ACTION_DATE_TIME         DATE DEFAULT sysdate
) ; 



alter table DEPARTMENT
add constraint DEPARTMENT_DEPARTMENT_ID_pk primary key (DEPARTMENT_ID) ; 	 



--===================
--DESIGNATION TABLE 
--===================



CREATE TABLE DESIGNATION 
(
DESIGNATION_ID              NUMBER, 
DESIGNATION_NAME            VARCHAR2(100) CONSTRAINT DESIGNATION_DESIGNATION_NAME_NN NOT NULL
                                          CONSTRAINT DESIGNATION_DESIGNATION_NAME_UK UNIQUE, 
DESIGNATION_DESCRIPTION     VARCHAR2(250), 
ACTION_USER                 VARCHAR2(100) DEFAULT user, 
ACTION_DATE_TIME            DATE DEFAULT sysdate
) ; 

alter table DESIGNATION 
add constraint DESIGNATION_DESIGNATION_ID_pk primary key (DESIGNATION_ID) ; 




--===================
--EMPLOYEE TABLE 
--===================

CREATE TABLE EMPLOYEE
(
EMPLOYEE_ID               NUMBER, 
DEPARTMENT_ID             NUMBER, 
DESIGNATION_ID            NUMBER, 
BRANCH_ID                 NUMBER, 
FIRST_NAME                VARCHAR2(100) CONSTRAINT EMPLOYEE_FIRST_NAME_NN NOT NULL, 
LAST_NAME                 VARCHAR2(100) CONSTRAINT EMPLOYEE_LAST_NAME_NN NOT NULL, 
FATHER_NAME               VARCHAR2(100), 
MOTHER_NAME               VARCHAR2(100), 
PRESENT_ADDRESS           VARCHAR2(350), 
PERMANENT_ADDRESS         VARCHAR2(350), 
SALARY                    NUMBER  CONSTRAINT EMPLOYEE_SALARY_CK CHECK (salary > 0 ), 
JOIN_DATE                 DATE DEFAULT sysdate, 
NID                       NUMBER CONSTRAINT EMPLOYEE_NID_UK UNIQUE, 
EMAIL                     VARCHAR2(100)  CONSTRAINT EMPLOYEE_EMAIL_UK UNIQUE, 
CELL_NUMBER               VARCHAR2(100) CONSTRAINT EMPLOYEE_CELL_NUMBER_UK UNIQUE, 
DATE_OF_BIRTH             DATE, 
GENDER                    VARCHAR2(100), 
RELIGION                  VARCHAR2(100), 
NATIONALITY               VARCHAR2(100), 
BLOOD_GROUP               VARCHAR2(100), 
EMPLOYEE_IMAGE            BLOB, 
ACTION_USER               VARCHAR2(100) DEFAULT user, 
ACTION_DATE_TIME          DATE DEFAULT sysdate
) ;  


alter table EMPLOYEE
add   constraint EMPLOYEE_EMPLOYEE_ID_pk primary key (EMPLOYEE_ID) ;

alter table EMPLOYEE
add   constraint EMPLOYEE_DEPARTMENT_ID_fk foreign key (DEPARTMENT_ID)
references DEPARTMENT (DEPARTMENT_ID) ; 

alter table EMPLOYEE
add   constraint EMPLOYEE_DESIGNATION_ID_fk foreign key (DESIGNATION_ID)
references DESIGNATION(DESIGNATION_ID) ; 


alter table EMPLOYEE
add   constraint EMPLOYEE_BRANCH_ID_fk foreign key (BRANCH_ID) 
references BRANCH(BRANCH_ID) ; 
	 


--====================
--USER_INFO TABLE 
--====================

CREATE TABLE USER_INFO
(
USER_INFO_ID            NUMBER, 
USER_TYPE_ID            NUMBER, 
USER_STATUS_ID          NUMBER, 
EMPLOYEE_ID             NUMBER, 
BRANCH_ID               NUMBER, 
USERNAME                VARCHAR2(100) CONSTRAINT USER_INFO_USERNAME_NN NOT NULL, 
PASSWORD                VARCHAR2(100) CONSTRAINT USER_INFO_PASSWORD_NN NOT NULL, 
USER_IMAGE              BLOB, 
ACTION_USER             VARCHAR2(100) DEFAULT user, 
ACTION_DATE_TIME        DATE DEFAULT sysdate
) ; 



alter table USER_INFO
add constraint  USER_INFO_USER_INFO_ID_PK primary key (USER_INFO_ID) ; 

alter table USER_INFO
add   constraint  USER_INFO_USER_TYPE_ID_fk foreign key (USER_TYPE_ID)
references USER_TYPE(USER_TYPE_ID) ; 

alter table USER_INFO
add   constraint USER_INFO_USER_STATUS_ID_fk foreign key (user_status_id)
references USER_STATUS(USER_STATUS_ID) ;

alter table USER_INFO 
add   constraint USER_INFO_EMPLOYEE_ID_fk foreign key (EMPLOYEE_ID) 
References EMPLOYEE(EMPLOYEE_ID) ; 

alter table USER_INFO 
add   constraint USER_INFO_BRANCH_ID_fk foreign key (BRANCH_ID) 
references BRANCH(BRANCH_ID) ; 

 

--===================
--EXPENSE_TYPE TABLE 
--===================
 

CREATE TABLE EXPENSE_TYPE
(
EXPENSE_TYPE_ID                NUMBER, 
EXPENSE_TYPE_NAME              VARCHAR2(50) CONSTRAINT EXPENSE_TYPE_EXPENSE_TYPE_NAME_NN NOT NULL
                                             CONSTRAINT EXPENSE_TYPE_EXPENSE_TYPE_NAME_UK UNIQUE, 
EXPENSE_TYPE_DESCRIPTION       VARCHAR2(300), 
ACTION_USER                    VARCHAR2(100) DEFAULT user, 
ACTION_DATE_TIME               DATE DEFAULT sysdate
) ; 


alter table EXPENSE_TYPE
add constraint EXPENSE_TYPE_EXPENSE_TYPE_ID_PK Primary Key (EXPENSE_TYPE_ID) ; 



--===================
--EXPENSE_M TABLE 
--===================


CREATE TABLE EXPENSE_M
(
EXPENSE_M_ID              NUMBER, 
BRANCH_ID                 NUMBER, 
EXPENSE_DATE              DATE CONSTRAINT EXPENSE_M_EXPENSE_DATE_NN  NOT NULL
                               CONSTRAINT EXPENSE_M_EXPENSE_DATE_UK UNIQUE , 
ACTION_USER               VARCHAR2(100)  DEFAULT user, 
ACTION_DATE_TIME          DATE DEFAULT sysdate
) ; 


alter table EXPENSE_M
add constraint EXPENSE_M_EXPENSE_M_ID_PK Primary Key (EXPENSE_M_ID) ;

alter table EXPENSE_M
add constraint EXPENSE_M_BRANCH_ID_FK Foreign Key (BRANCH_ID) 
References BRANCH(BRANCH_ID) ; 




--===================
--EXPENSE_D TABLE 
--===================



CREATE TABLE EXPENSE_D
(	
EXPENSE_M_ID             NUMBER, 
EXPENSE_TYPE_ID          NUMBER CONSTRAINT EXPENSE_D_EXPENSE_TYPE_ID_NN NOT NULL, 
EXPENSE_AMOUNT           NUMBER CONSTRAINT EXPENSE_D_EXPENSE_AMOUNT_NN NOT NULL, 
RECEIVE_MODE_ID          NUMBER CONSTRAINT EXPENSE_D_RECEIVE_MODE_ID_NN NOT NULL, 
EMPLOYEE_ID              NUMBER, 
DESCRIPTION              VARCHAR2(250), 
ACTION_USER              VARCHAR2(100), 
ACTION_DATE_TIME         VARCHAR2(100)
) ; 

	
alter Table EXPENSE_D
add   constraint EXPENSE_D_EXPENSE_M_ID_FK Foreign Key (EXPENSE_M_ID) 
references Expense_M(Expense_M_ID) ; 

alter table EXPENSE_D
add   constraint EXPENSE_D_EXPENSE_TYPE_ID_FK Foreign Key (EXPENSE_TYPE_ID)
references EXPENSE_TYPE(EXPENSE_TYPE_ID) ; 

alter table EXPENSE_D
add   constraint EXPENSE_D_RECEIVE_MODE_ID_fk foreign key (RECEIVE_MODE_ID) 
references RECEIVE_MODE(RECEIVE_MODE_ID) ; 

alter table EXPENSE_D
add   constraint EXPENSE_D_EMPLOYEE_ID_fk foreign key (EMPLOYEE_ID) 
references EMPLOYEE(EMPLOYEE_ID) ; 



--===================
--RECEIVE_MODE TABLE 
--===================


CREATE TABLE RECEIVE_MODE
(
RECEIVE_MODE_ID               NUMBER, 
RECEIVE_MODE_NAME             VARCHAR2(100) CONSTRAINT RECEIVE_MODE_RECEIVE_MODE__NAME_NN NOT NULL
                                            CONSTRAINT RECEIVE_MODE_RECEIVE_MODE__NAME_UK UNIQUE, 
RECEIVE_MODE_DESCRIPTION      VARCHAR2(250), 
ACTION_USER                   VARCHAR2(50) DEFAULT user, 
ACTION_DATE_TIME              DATE DEFAULT sysdate
) ; 


alter table RECEIVE_MODE 
add constraint RECEIVE_MODE_RECEIVE_MODE_ID_pk primary key (RECEIVE_MODE_ID) ; 



--===================
--EVENT_M TABLE 
--===================

DROP TABLE EVENT_M ; 

CREATE TABLE EVENT_M
(
EVENT_M_ID               NUMBER, 
EVENT_M_NAME             VARCHAR2(100) CONSTRAINT EVENT_M_EVENT_M_NN NOT NULL
                                       CONSTRAINT EVENT_M_EVENT_M_UK UNIQUE,
EVENT_M_DESCRIPTION      VARCHAR2(100), 
ACTION_USER              VARCHAR2(100) DEFAULT user, 
ACTION_DATE_TIME         DATE DEFAULT sysdate
) ; 

ALTER TABLE EVENT_M
ADD CONSTRAINT EVENT_M_EVENT_M_ID_PK PRIMARY KEY (EVENT_M_ID) ; 



--===================
--EVENT_D TABLE 
--===================


DROP TABLE EVENT_D ; 
CREATE TABLE EVENT_D
(
EVENT_D_ID               NUMBER, 
EVENT_M_ID               NUMBER, 
EVENT_NAME               VARCHAR2(250) CONSTRAINT EVENT_D_EVENT_NAME_NN NOT NULL
                                       CONSTRAINT EVENT_D_EVENT_NAME_UK UNIQUE, 
EVENT_D_DESCRIPTION      VARCHAR2(350), 
ACTION_USER              VARCHAR2(100) DEFAULT user, 
ACTION_DATE_TIME         DATE DEFAULT sysdate
) ;  


ALTER TABLE EVENT_D
ADD CONSTRAINT EVENT_D_EVENT_D_ID_PK PRIMARY KEY (EVENT_D_ID) ; 

ALTER TABLE EVENT_D
ADD CONSTRAINT EVENT_D_ID_EVENT_M_ID_FK FOREIGN KEY (EVENT_M_ID)
REFERENCES EVENT_M(EVENT_M_ID) ; 



--===================
--CLIENT TABLE 
--===================


DROP TABE CLIENT ; 

CREATE TABLE CLIENT
(
CLIENT_ID               NUMBER, 
CLIENT_NAME             VARCHAR2(100) CONSTRAINT CLIENT_CLIENT_NAME_NN NOT NULL, 
CELL_NUMBER             VARCHAR2(100) CONSTRAINT CLIENT_CELL_NUMBER_UK UNIQUE
                                      CONSTRAINT CLIENT_CELL_NUMBER_NN NOT NULL, 
ADDRESS                 VARCHAR2(100), 
EMAIL                   VARCHAR2(100) CONSTRAINT CLIENT_EMAIL_UK UNIQUE, 
WEBSITE                 VARCHAR2(100) CONSTRAINT CLIENT_WEBSITE_UK UNIQUE,
CLIENT_STATUS           VARCHAR2(100), 
CITY                    VARCHAR2(100), 
COUNTRY                 VARCHAR2(100), 
ACTION_USER             VARCHAR2(100) DEFAULT user, 
ACTION_DATE_TIME        DATE DEFAULT sysdate
) ;
	
  	 
ALTER TABLE CLIENT
ADD CONSTRAINT CLIENT_CLIENT_ID_PK PRIMARY KEY (CLIENT_ID) ; 



--===================
--VENUE TABLE 
--===================

DROP TABLE VENUE ; 

CREATE TABLE VENUE 
(
VENUE_ID                    NUMBER, 
VENUE_NAME                  VARCHAR2(100) CONSTRAINT VENUE_VENUE_NAME_NN NOT NULL 
                                          CONSTRAINT VENUE_VENUE_NAME_UK UNIQUE,
VENUE_LOCATION              VARCHAR2(100) CONSTRAINT VENUE_VENUE_LOCATION_NN NOT NULL, 
ACTION_USER                 VARCHAR2(100) DEFAULT user, 
ACTION_DATE_TIME            DATE DEFAULT sysdate
) ;  


ALTER TABLE VENUE
ADD CONSTRAINT VENUE_VENUE_ID_PK PRIMARY KEY (VENUE_ID) ; 



--===================
--SERVICE TABLE 
--===================

DROP TABLE SERVICE ; 

CREATE TABLE SERVICE
(
SERVICE_ID                       NUMBER, 
EVENT_D_ID                       NUMBER, 
SERVICE_NAME                     VARCHAR2(100) CONSTRAINT SERVICE_SERVICE_NAME_NN NOT NULL , 
SERVICE_NAME_DESCRIPTION         VARCHAR2(350), 
ACTION_USER                      VARCHAR2(100) DEFAULT user, 
ACTION_DATE_TIME                 DATE DEFAULT sysdate
) ;  


ALTER TABLE SERVICE
ADD CONSTRAINT SERVICE_SERVICE_ID_PK PRIMARY KEY (SERVICE_ID) ; 
 
ALTER TABLE SERVICE
ADD CONSTRAINT EVENT_D_EVENT_D_ID_FK FOREIGN KEY (EVENT_D_ID)
REFERENCES EVENT_D (EVENT_D_ID) ; 
   


--===================
--BOOKING_M TABLE 
--===================
	
DROP TABLE BOOKING_M ; 

CREATE TABLE BOOKING_M
(	
BOOKING_M_ID              NUMBER, 
EVENT_M_ID                NUMBER, 
CLIENT_ID                 NUMBER, 
EVENT_D_ID                NUMBER, 
VENUE_ID                  NUMBER, 
BOOKING_DATE              DATE, 
EVENT_START_DATE          DATE, 
EVENT_END_DATE            DATE, 
TOTAL_AMOUNT              NUMBER, 
ADVANCE                   NUMBER, 
DUE                       NUMBER, 
RECEIVE_MODE_ID           NUMBER, 
ACTION_USER               VARCHAR2(100 BYTE) DEFAULT user, 
ACTION_DATE_TIME          DATE DEFAULT sysdate
) ; 


ALTER TABLE BOOKING_M
ADD CONSTRAINT BOOKING_M_BOOKING_M_ID_PK PRIMARY KEY (BOOKING_M_ID) ; 

ALTER TABLE BOOKING_M
ADD CONSTRAINT BOOKING_M_EVENT_M_ID_FK FOREIGN KEY (EVENT_M_ID)
REFERENCES EVENT_M(EVENT_M_ID) ;  

ALTER TABLE BOOKING_M
ADD CONSTRAINT BOOKING_M_EVENT_D_ID_FK FOREIGN KEY (EVENT_D_ID)
REFERENCES EVENT_D (EVENT_D_ID) ;

ALTER TABLE BOOKING_M
ADD CONSTRAINT BOOKING_M_VENUE_ID_FK FOREIGN KEY (VENUE_ID)
REFERENCES VENUE(VENUE_ID) ; 

ALTER TABLE BOOKING_M
ADD CONSTRAINT BOOKING_M_RECEIVE_MODE_ID_FK FOREIGN KEY (RECEIVE_MODE_ID)
REFERENCES RECEIVE_MODE(RECEIVE_MODE_ID) ; 


--===================
--BOOKING_D TABLE 
--===================


DROP TABLE BOOKING_D ; 

CREATE TABLE BOOKING_D
(
BOOKING_D_ID              NUMBER, 
BOOKING_M_ID              NUMBER, 
SERVICE_ID                NUMBER, 
SERVICE_QUANTITY          NUMBER, 
SERVICE_AMOUNT            NUMBER, 
ACTION_USER               VARCHAR2(100 BYTE) DEFAULT user, 
ACTION_DATE_TIME          DATE DEFAULT sysdate
) ;  


ALTER TABLE BOOKING_D
ADD CONSTRAINT BOOKING_D_BOOKING_D_ID_PK PRIMARY KEY (BOOKING_D_ID) ;
 
ALTER TABLE BOOKING_D
ADD CONSTRAINT BOOKING_D_BOOKING_M_ID_FK FOREIGN KEY (BOOKING_M_ID)
REFERENCES BOOKING_M (BOOKING_M_ID) ; 

ALTER TABLE BOOKING_D
ADD CONSTRAINT BOOKING_D_SERVICE_ID_FK FOREIGN KEY (SERVICE_ID)
REFERENCES SERVICE (SERVICE_ID); 



--===================
--BILL TABLE 
--===================

DROP TABLE BILL ; 

CREATE TABLE BILL
(	
BILL_ID                    NUMBER, 
BOOKING_M_ID               NUMBER, 
RECEIVE_MODE_ID            NUMBER, 
INVOICE_NUMBER             NUMBER  CONSTRAINT  BILL_INVOICE_NUMBER_UK UNIQUE,
BILLING_DATE               DATE, 
PAYABLE_AMOUNT             NUMBER, 
DISCOUNT                   NUMBER, 
NET_AMOUNT                 NUMBER, 
PAID_AMOUNT                NUMBER CONSTRAINT BILL_PAID_AMOUNT_NN NOT NULL, 
DUE_AMOUNT                 NUMBER, 
RETURN_AMOUNT              NUMBER, 
ACTION_USER                VARCHAR2(100) DEFAULT user, 
ACTION_DATE_TIME           DATE DEFAULT sysdate
) ; 


ALTER TABLE BILL
ADD CONSTRAINT BILL_BILL_ID_PK PRIMARY KEY (BILL_ID) ; 
	 
ALTER TABLE BILL
ADD CONSTRAINT BILL_BOOKING_M_ID_FK FOREIGN KEY (BOOKING_M_ID)
REFERENCES BOOKING_M(BOOKING_M_ID) ;  

ALTER TABLE BILL
ADD CONSTRAINT BILL_RECEIVE_MODE_ID_FK FOREIGN KEY (RECEIVE_MODE_ID)
REFERENCES RECEIVE_MODE(RECEIVE_MODE_ID) ;



--===================
--EVENT_COST TABLE 
--===================

DROP TABLE EVENT_COST ; 

CREATE TABLE EVENT_COST 
(
COST_ID                   NUMBER, 
COST_NAME                 VARCHAR2(100) CONSTRAINT EVENT_COST_COST_NAME_NN NOT NULL
                                        CONSTRAINT EVENT_COST_COST_NAME_UK UNIQUE,
COST_DESCRIPTION          VARCHAR2(250), 
ACTION_USER               VARCHAR2(100) DEFAULT user, 
ACTION_DATE_TIME          DATE DEFAULT sysdate
) ;  

	 
ALTER TABLE EVENT_COST
ADD CONSTRAINT EVENT_COST_COST_ID_PK PRIMARY KEY (COST_ID) ; 



--=====================
--BOOKING_COST_M TABLE 
--=====================


DROP TABLE BOOKING_COST_M ;

CREATE TABLE BOOKING_COST_M
(
BOOKING_COST_M_ID           NUMBER, 
BOOKING_M_ID                NUMBER, 
BOOKING_COST_M_DATE         DATE CONSTRAINT BOOKING_COST_M_BOOKING_COST_M_DATE_NN NOT NULL, 
ACTION_USER                 VARCHAR2(100) DEFAULT user, 
ACTION_DATE_TIME            DATE DEFAULT sysdate
) ; 


ALTER TABLE BOOKING_COST_M
ADD CONSTRAINT BOOKING_COST_M_BOOKING_COST_M_ID_PK PRIMARY KEY (BOOKING_COST_M_ID) ; 

ALTER TABLE BOOKING_COST_M
ADD CONSTRAINT BOOKING_COST_M_BOOKING_M_ID_FK FOREIGN KEY (BOOKING_M_ID)
REFERENCES BOOKING_M (BOOKING_M_ID) ; 




--=====================
--BOOKING_COST_D TABLE 
--=====================

DROP TABLE BOOKING_COST_D ; 

CREATE TABLE BOOKING_COST_D
(
BOOKING_COST_D_ID           NUMBER, 
BOOKING_COST_M_ID           NUMBER, 
COST_ID                     NUMBER, 
AMOUNT                      NUMBER, 
ACTION_USER                 VARCHAR2(100) DEFAULT user, 
ACTION_DATE_TIME            DATE DEFAULT sysdate
) ; 


ALTER TABLE BOOKING_COST_D
ADD CONSTRAINT BOOKING_COST_D_BOOKING_COST_D_ID_PK PRIMARY KEY (BOOKING_COST_D_ID) ; 

ALTER TABLE BOOKING_COST_D
ADD CONSTRAINT BOOKING_COST_D_BOOKING_COST_M_ID_FK FOREIGN KEY (BOOKING_COST_M_ID)
REFERENCES BOOKING_COST_M (BOOKING_COST_M_ID) ; 




--===================
--RECEIVE TABLE 
--===================

DROP TABLE RECEIVE ; 

CREATE TABLE RECEIVE
(
RECEIVE_ID                NUMBER, 
BILL_ID                   NUMBER, 
BOOKING_M_ID              NUMBER, 
RECEIVE_DATE              DATE CONSTRAINT RECEIVE_RECEIVE_NN NOT NULL, 
RECEIVE_MODE_ID           NUMBER, 
AMOUNT                    NUMBER CONSTRAINT RECEIVE_AMOUNT_NN NOT NULL, 
RECIEVE_DUE               NUMBER, 
ACTION_USER               VARCHAR2(100) DEFAULT user, 
ACTION_DATE_TIME          DATE DEFAULT sysdate
) ;  


ALTER TABLE RECEIVE
ADD CONSTRAINT RECEIVE_RECEIVE_ID_PK PRIMARY KEY (RECEIVE_ID) ; 

ALTER TABLE RECEIVE
ADD CONSTRAINT RECEIVE_BILL_ID_FK FOREIGN KEY (BILL_ID)
REFERENCES BILL(BILL_ID) ;  

ALTER TABLE RECEIVE
ADD CONSTRAINT RECEIVE_BOOKING_M_ID_FK FOREIGN KEY (BOOKING_M_ID)
REFERENCES BOOKING_M (BOOKING_M_ID) ; 
 
ALTER TABLE RECEIVE
ADD CONSTRAINT RECEIVE_RECEIVE_MODE_ID_FK FOREIGN KEY (RECEIVE_MODE_ID)
REFERENCES RECEIVE_MODE (RECEIVE_MODE_ID) ; 




@@@@@@@@@@@@@@@@@@@@@@@@  END @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@